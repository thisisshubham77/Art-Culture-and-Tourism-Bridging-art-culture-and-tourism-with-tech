{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "65d3af65",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\aaksh\\anaconda3\\Lib\\site-packages\\pandas\\core\\arrays\\masked.py:60: UserWarning: Pandas requires version '1.3.6' or newer of 'bottleneck' (version '1.3.5' currently installed).\n",
      "  from pandas.core import (\n",
      "C:\\Users\\aaksh\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:1056: InsecureRequestWarning: Unverified HTTPS request is being made to host 'nlcpr.mdoner.gov.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved as nesids_projects.csv\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "url = \"https://nlcpr.mdoner.gov.in/ner/webservices/paryas/nesidsparyas.php\"\n",
    "\n",
    "# Disable SSL certificate verification\n",
    "response = requests.get(url, verify=False)\n",
    "\n",
    "# Suppress warning (optional)\n",
    "import urllib3\n",
    "urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n",
    "\n",
    "# Load data\n",
    "data = response.json()\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Save to CSV\n",
    "df.to_csv(\"nesids_projects.csv\", index=False)\n",
    "print(\"Saved as nesids_projects.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "511aef57",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.cm as cm\n",
    "from sklearn.cluster import KMeans, AgglomerativeClustering, DBSCAN\n",
    "import scipy.cluster.hierarchy as sch\n",
    "from sklearn.preprocessing import MinMaxScaler, StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3fbeb956",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv(r'C:\\Users\\aaksh\\OneDrive\\Desktop\\nesids_projects.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a41a71e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sr No</th>\n",
       "      <th>State Name</th>\n",
       "      <th>State Code</th>\n",
       "      <th>District Name</th>\n",
       "      <th>District Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Scheme</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Project Name</th>\n",
       "      <th>Date of Sanction</th>\n",
       "      <th>Project Approved Cost (Rs. in Cr)</th>\n",
       "      <th>Funds Released (Rs. in Cr)</th>\n",
       "      <th>UCs Received (Rs. in Cr)</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Tripura</td>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of road from Debendra Choudhury P...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>40.38</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of Road from NH-515 at Lakhi Nepa...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>66.84</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of Road from Bogamati to Umananda...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>131.71</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Miscellaneous</td>\n",
       "      <td>Legacy Waste Treatment in 39 ULBS in Assam</td>\n",
       "      <td>14-03-2024</td>\n",
       "      <td>71.93</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Augmentation of Water Supply System at Bomdila...</td>\n",
       "      <td>27-02-2024</td>\n",
       "      <td>61.77</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>145</td>\n",
       "      <td>Sikkim</td>\n",
       "      <td>11</td>\n",
       "      <td>North  District</td>\n",
       "      <td>241.0</td>\n",
       "      <td>27.524934</td>\n",
       "      <td>88.525572</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Road &amp; Bridges</td>\n",
       "      <td>Construction of two lane balanced cantilever b...</td>\n",
       "      <td>12-09-2018</td>\n",
       "      <td>88.54</td>\n",
       "      <td>88.54</td>\n",
       "      <td>64.42</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>17</td>\n",
       "      <td>East Khasi Hills</td>\n",
       "      <td>298.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Greater Sohra(Cherrapunjee) water supply Scheme</td>\n",
       "      <td>22-02-2019</td>\n",
       "      <td>24.81</td>\n",
       "      <td>24.81</td>\n",
       "      <td>23.60</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>147</td>\n",
       "      <td>Mizoram</td>\n",
       "      <td>15</td>\n",
       "      <td>Aizawl</td>\n",
       "      <td>283.0</td>\n",
       "      <td>23.699113</td>\n",
       "      <td>93.026930</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Alternate Gravity Water Supply Scheme of Aizaw...</td>\n",
       "      <td>04-12-2018</td>\n",
       "      <td>114.20</td>\n",
       "      <td>112.50</td>\n",
       "      <td>107.14</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>148</td>\n",
       "      <td>Manipur</td>\n",
       "      <td>14</td>\n",
       "      <td>Imphal East</td>\n",
       "      <td>278.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Construction of six overhead Tank &amp; ground sum...</td>\n",
       "      <td>14-09-2018</td>\n",
       "      <td>41.92</td>\n",
       "      <td>41.92</td>\n",
       "      <td>41.92</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>149</td>\n",
       "      <td>Manipur</td>\n",
       "      <td>14</td>\n",
       "      <td>Churachandpur</td>\n",
       "      <td>274.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Water supply distribution network for Churacha...</td>\n",
       "      <td>14-09-2018</td>\n",
       "      <td>19.80</td>\n",
       "      <td>19.80</td>\n",
       "      <td>19.80</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Sr No         State Name  State Code     District Name  District Code  \\\n",
       "0        1            Tripura          16               NaN            0.0   \n",
       "1        2              Assam          18               NaN            0.0   \n",
       "2        3              Assam          18               NaN            0.0   \n",
       "3        4              Assam          18               NaN            NaN   \n",
       "4        5  Arunachal Pradesh          12               NaN            NaN   \n",
       "..     ...                ...         ...               ...            ...   \n",
       "144    145             Sikkim          11   North  District          241.0   \n",
       "145    146          Meghalaya          17  East Khasi Hills          298.0   \n",
       "146    147            Mizoram          15            Aizawl          283.0   \n",
       "147    148            Manipur          14       Imphal East          278.0   \n",
       "148    149            Manipur          14     Churachandpur          274.0   \n",
       "\n",
       "      Latitude  Longitude  Scheme          Sector  \\\n",
       "0          NaN        NaN  NESIDS             T&C   \n",
       "1          NaN        NaN  NESIDS             T&C   \n",
       "2          NaN        NaN  NESIDS             T&C   \n",
       "3          NaN        NaN  NESIDS   Miscellaneous   \n",
       "4          NaN        NaN  NESIDS    Water Supply   \n",
       "..         ...        ...     ...             ...   \n",
       "144  27.524934  88.525572  NESIDS  Road & Bridges   \n",
       "145        NaN        NaN  NESIDS    Water Supply   \n",
       "146  23.699113  93.026930  NESIDS    Water Supply   \n",
       "147        NaN        NaN  NESIDS    Water Supply   \n",
       "148        NaN        NaN  NESIDS    Water Supply   \n",
       "\n",
       "                                          Project Name Date of Sanction  \\\n",
       "0    Construction of road from Debendra Choudhury P...       03-04-2024   \n",
       "1    Construction of Road from NH-515 at Lakhi Nepa...       03-04-2024   \n",
       "2    Construction of Road from Bogamati to Umananda...       03-04-2024   \n",
       "3           Legacy Waste Treatment in 39 ULBS in Assam       14-03-2024   \n",
       "4    Augmentation of Water Supply System at Bomdila...       27-02-2024   \n",
       "..                                                 ...              ...   \n",
       "144  Construction of two lane balanced cantilever b...       12-09-2018   \n",
       "145    Greater Sohra(Cherrapunjee) water supply Scheme       22-02-2019   \n",
       "146  Alternate Gravity Water Supply Scheme of Aizaw...       04-12-2018   \n",
       "147  Construction of six overhead Tank & ground sum...       14-09-2018   \n",
       "148  Water supply distribution network for Churacha...       14-09-2018   \n",
       "\n",
       "     Project Approved Cost (Rs. in Cr)  Funds Released (Rs. in Cr)  \\\n",
       "0                                40.38                        0.00   \n",
       "1                                66.84                        0.00   \n",
       "2                               131.71                        0.00   \n",
       "3                                71.93                        0.00   \n",
       "4                                61.77                        0.00   \n",
       "..                                 ...                         ...   \n",
       "144                              88.54                       88.54   \n",
       "145                              24.81                       24.81   \n",
       "146                             114.20                      112.50   \n",
       "147                              41.92                       41.92   \n",
       "148                              19.80                       19.80   \n",
       "\n",
       "     UCs Received (Rs. in Cr)   Status  \n",
       "0                        0.00  Ongoing  \n",
       "1                        0.00  Ongoing  \n",
       "2                        0.00  Ongoing  \n",
       "3                        0.00  Ongoing  \n",
       "4                        0.00  Ongoing  \n",
       "..                        ...      ...  \n",
       "144                     64.42  Ongoing  \n",
       "145                     23.60  Ongoing  \n",
       "146                    107.14  Ongoing  \n",
       "147                     41.92  Ongoing  \n",
       "148                     19.80  Ongoing  \n",
       "\n",
       "[149 rows x 15 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1f544a3d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sr No</th>\n",
       "      <th>State Code</th>\n",
       "      <th>District Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Project Approved Cost (Rs. in Cr)</th>\n",
       "      <th>Funds Released (Rs. in Cr)</th>\n",
       "      <th>UCs Received (Rs. in Cr)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>149.000000</td>\n",
       "      <td>149.000000</td>\n",
       "      <td>115.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>149.000000</td>\n",
       "      <td>149.000000</td>\n",
       "      <td>149.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>75.000000</td>\n",
       "      <td>14.993289</td>\n",
       "      <td>197.704348</td>\n",
       "      <td>26.109773</td>\n",
       "      <td>91.715889</td>\n",
       "      <td>30.130872</td>\n",
       "      <td>11.403691</td>\n",
       "      <td>8.517315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>43.156691</td>\n",
       "      <td>2.349516</td>\n",
       "      <td>182.482442</td>\n",
       "      <td>1.855583</td>\n",
       "      <td>2.174119</td>\n",
       "      <td>41.215246</td>\n",
       "      <td>18.104918</td>\n",
       "      <td>15.825204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>23.699113</td>\n",
       "      <td>88.525572</td>\n",
       "      <td>0.290000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>38.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.509702</td>\n",
       "      <td>90.810674</td>\n",
       "      <td>7.850000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>75.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>265.000000</td>\n",
       "      <td>27.002219</td>\n",
       "      <td>91.574811</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>3.140000</td>\n",
       "      <td>0.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>112.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>284.000000</td>\n",
       "      <td>27.515875</td>\n",
       "      <td>92.736422</td>\n",
       "      <td>34.650000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>10.520000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>149.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>902.000000</td>\n",
       "      <td>27.589133</td>\n",
       "      <td>94.940552</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>112.500000</td>\n",
       "      <td>107.140000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Sr No  State Code  District Code   Latitude  Longitude  \\\n",
       "count  149.000000  149.000000     115.000000   6.000000   6.000000   \n",
       "mean    75.000000   14.993289     197.704348  26.109773  91.715889   \n",
       "std     43.156691    2.349516     182.482442   1.855583   2.174119   \n",
       "min      1.000000   11.000000       0.000000  23.699113  88.525572   \n",
       "25%     38.000000   13.000000       0.000000  24.509702  90.810674   \n",
       "50%     75.000000   15.000000     265.000000  27.002219  91.574811   \n",
       "75%    112.000000   17.000000     284.000000  27.515875  92.736422   \n",
       "max    149.000000   18.000000     902.000000  27.589133  94.940552   \n",
       "\n",
       "       Project Approved Cost (Rs. in Cr)  Funds Released (Rs. in Cr)  \\\n",
       "count                         149.000000                  149.000000   \n",
       "mean                           30.130872                   11.403691   \n",
       "std                            41.215246                   18.104918   \n",
       "min                             0.290000                    0.000000   \n",
       "25%                             7.850000                    0.100000   \n",
       "50%                            20.000000                    3.140000   \n",
       "75%                            34.650000                   18.000000   \n",
       "max                           400.000000                  112.500000   \n",
       "\n",
       "       UCs Received (Rs. in Cr)  \n",
       "count                149.000000  \n",
       "mean                   8.517315  \n",
       "std                   15.825204  \n",
       "min                    0.000000  \n",
       "25%                    0.000000  \n",
       "50%                    0.100000  \n",
       "75%                   10.520000  \n",
       "max                  107.140000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a8b7ca0e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 149 entries, 0 to 148\n",
      "Data columns (total 15 columns):\n",
      " #   Column                             Non-Null Count  Dtype  \n",
      "---  ------                             --------------  -----  \n",
      " 0   Sr No                              149 non-null    int64  \n",
      " 1   State Name                         149 non-null    object \n",
      " 2   State Code                         149 non-null    int64  \n",
      " 3   District Name                      72 non-null     object \n",
      " 4   District Code                      115 non-null    float64\n",
      " 5   Latitude                           6 non-null      float64\n",
      " 6   Longitude                          6 non-null      float64\n",
      " 7   Scheme                             149 non-null    object \n",
      " 8   Sector                             149 non-null    object \n",
      " 9   Project Name                       149 non-null    object \n",
      " 10  Date of Sanction                   149 non-null    object \n",
      " 11  Project Approved Cost (Rs. in Cr)  149 non-null    float64\n",
      " 12  Funds Released (Rs. in Cr)         149 non-null    float64\n",
      " 13  UCs Received (Rs. in Cr)           149 non-null    float64\n",
      " 14  Status                             149 non-null    object \n",
      "dtypes: float64(6), int64(2), object(7)\n",
      "memory usage: 17.6+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f7f71fa1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.rename(columns={\n",
    "    'Project Approved Cost (Rs. in Cr)': 'Project_Approved_Cost',\n",
    "    'Funds Released (Rs. in Cr)': 'Funds_Released'\n",
    "}, inplace=True)\n",
    "\n",
    "df['Project_Approved_Cost'] = pd.to_numeric(df['Project_Approved_Cost'], errors='coerce')\n",
    "df['Funds_Released'] = pd.to_numeric(df['Funds_Released'], errors='coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dae46882",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sr No</th>\n",
       "      <th>State Name</th>\n",
       "      <th>State Code</th>\n",
       "      <th>District Name</th>\n",
       "      <th>District Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Scheme</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Project Name</th>\n",
       "      <th>Date of Sanction</th>\n",
       "      <th>Project_Approved_Cost</th>\n",
       "      <th>Funds_Released</th>\n",
       "      <th>UCs Received (Rs. in Cr)</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Tripura</td>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of road from Debendra Choudhury P...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>40.38</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of Road from NH-515 at Lakhi Nepa...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>66.84</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>T&amp;C</td>\n",
       "      <td>Construction of Road from Bogamati to Umananda...</td>\n",
       "      <td>03-04-2024</td>\n",
       "      <td>131.71</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Assam</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Miscellaneous</td>\n",
       "      <td>Legacy Waste Treatment in 39 ULBS in Assam</td>\n",
       "      <td>14-03-2024</td>\n",
       "      <td>71.93</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Augmentation of Water Supply System at Bomdila...</td>\n",
       "      <td>27-02-2024</td>\n",
       "      <td>61.77</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>145</td>\n",
       "      <td>Sikkim</td>\n",
       "      <td>11</td>\n",
       "      <td>North  District</td>\n",
       "      <td>241.0</td>\n",
       "      <td>27.524934</td>\n",
       "      <td>88.525572</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Road &amp; Bridges</td>\n",
       "      <td>Construction of two lane balanced cantilever b...</td>\n",
       "      <td>12-09-2018</td>\n",
       "      <td>88.54</td>\n",
       "      <td>88.54</td>\n",
       "      <td>64.42</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>17</td>\n",
       "      <td>East Khasi Hills</td>\n",
       "      <td>298.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Greater Sohra(Cherrapunjee) water supply Scheme</td>\n",
       "      <td>22-02-2019</td>\n",
       "      <td>24.81</td>\n",
       "      <td>24.81</td>\n",
       "      <td>23.60</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>147</td>\n",
       "      <td>Mizoram</td>\n",
       "      <td>15</td>\n",
       "      <td>Aizawl</td>\n",
       "      <td>283.0</td>\n",
       "      <td>23.699113</td>\n",
       "      <td>93.026930</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Alternate Gravity Water Supply Scheme of Aizaw...</td>\n",
       "      <td>04-12-2018</td>\n",
       "      <td>114.20</td>\n",
       "      <td>112.50</td>\n",
       "      <td>107.14</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>148</td>\n",
       "      <td>Manipur</td>\n",
       "      <td>14</td>\n",
       "      <td>Imphal East</td>\n",
       "      <td>278.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Construction of six overhead Tank &amp; ground sum...</td>\n",
       "      <td>14-09-2018</td>\n",
       "      <td>41.92</td>\n",
       "      <td>41.92</td>\n",
       "      <td>41.92</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>149</td>\n",
       "      <td>Manipur</td>\n",
       "      <td>14</td>\n",
       "      <td>Churachandpur</td>\n",
       "      <td>274.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NESIDS</td>\n",
       "      <td>Water Supply</td>\n",
       "      <td>Water supply distribution network for Churacha...</td>\n",
       "      <td>14-09-2018</td>\n",
       "      <td>19.80</td>\n",
       "      <td>19.80</td>\n",
       "      <td>19.80</td>\n",
       "      <td>Ongoing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Sr No         State Name  State Code     District Name  District Code  \\\n",
       "0        1            Tripura          16               NaN            0.0   \n",
       "1        2              Assam          18               NaN            0.0   \n",
       "2        3              Assam          18               NaN            0.0   \n",
       "3        4              Assam          18               NaN            NaN   \n",
       "4        5  Arunachal Pradesh          12               NaN            NaN   \n",
       "..     ...                ...         ...               ...            ...   \n",
       "144    145             Sikkim          11   North  District          241.0   \n",
       "145    146          Meghalaya          17  East Khasi Hills          298.0   \n",
       "146    147            Mizoram          15            Aizawl          283.0   \n",
       "147    148            Manipur          14       Imphal East          278.0   \n",
       "148    149            Manipur          14     Churachandpur          274.0   \n",
       "\n",
       "      Latitude  Longitude  Scheme          Sector  \\\n",
       "0          NaN        NaN  NESIDS             T&C   \n",
       "1          NaN        NaN  NESIDS             T&C   \n",
       "2          NaN        NaN  NESIDS             T&C   \n",
       "3          NaN        NaN  NESIDS   Miscellaneous   \n",
       "4          NaN        NaN  NESIDS    Water Supply   \n",
       "..         ...        ...     ...             ...   \n",
       "144  27.524934  88.525572  NESIDS  Road & Bridges   \n",
       "145        NaN        NaN  NESIDS    Water Supply   \n",
       "146  23.699113  93.026930  NESIDS    Water Supply   \n",
       "147        NaN        NaN  NESIDS    Water Supply   \n",
       "148        NaN        NaN  NESIDS    Water Supply   \n",
       "\n",
       "                                          Project Name Date of Sanction  \\\n",
       "0    Construction of road from Debendra Choudhury P...       03-04-2024   \n",
       "1    Construction of Road from NH-515 at Lakhi Nepa...       03-04-2024   \n",
       "2    Construction of Road from Bogamati to Umananda...       03-04-2024   \n",
       "3           Legacy Waste Treatment in 39 ULBS in Assam       14-03-2024   \n",
       "4    Augmentation of Water Supply System at Bomdila...       27-02-2024   \n",
       "..                                                 ...              ...   \n",
       "144  Construction of two lane balanced cantilever b...       12-09-2018   \n",
       "145    Greater Sohra(Cherrapunjee) water supply Scheme       22-02-2019   \n",
       "146  Alternate Gravity Water Supply Scheme of Aizaw...       04-12-2018   \n",
       "147  Construction of six overhead Tank & ground sum...       14-09-2018   \n",
       "148  Water supply distribution network for Churacha...       14-09-2018   \n",
       "\n",
       "     Project_Approved_Cost  Funds_Released  UCs Received (Rs. in Cr)   Status  \n",
       "0                    40.38            0.00                      0.00  Ongoing  \n",
       "1                    66.84            0.00                      0.00  Ongoing  \n",
       "2                   131.71            0.00                      0.00  Ongoing  \n",
       "3                    71.93            0.00                      0.00  Ongoing  \n",
       "4                    61.77            0.00                      0.00  Ongoing  \n",
       "..                     ...             ...                       ...      ...  \n",
       "144                  88.54           88.54                     64.42  Ongoing  \n",
       "145                  24.81           24.81                     23.60  Ongoing  \n",
       "146                 114.20          112.50                    107.14  Ongoing  \n",
       "147                  41.92           41.92                     41.92  Ongoing  \n",
       "148                  19.80           19.80                     19.80  Ongoing  \n",
       "\n",
       "[149 rows x 15 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "78756a1c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=[\"District Name\", \"District Code\", \"Latitude\", \"Longitude\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cbd07c95",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Date of Sanction\"] = pd.to_datetime(df[\"Date of Sanction\"], dayfirst=True, errors='coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "beebe2b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"State Name\"] = df[\"State Name\"].str.strip()\n",
    "df[\"Sector\"] = df[\"Sector\"].str.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "879e194f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Null values per column:\n",
      " Sr No                       0\n",
      "State Name                  0\n",
      "State Code                  0\n",
      "Scheme                      0\n",
      "Sector                      0\n",
      "Project Name                0\n",
      "Date of Sanction            0\n",
      "Project_Approved_Cost       0\n",
      "Funds_Released              0\n",
      "UCs Received (Rs. in Cr)    0\n",
      "Status                      0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"Null values per column:\\n\", df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fb4a51e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Funding by State:\n",
      "                    Project_Approved_Cost  Funds_Released\n",
      "State Name                                              \n",
      "Assam                            1406.47          389.62\n",
      "Arunachal Pradesh                 774.41          292.98\n",
      "Meghalaya                         519.44          159.19\n",
      "Tripura                           483.46          121.65\n",
      "Mizoram                           448.64          268.70\n",
      "Manipur                           374.49          177.19\n",
      "Nagaland                          253.03          102.10\n",
      "Sikkim                            229.56          187.72\n"
     ]
    }
   ],
   "source": [
    "state_funding = df.groupby(\"State Name\")[\n",
    "    [\"Project_Approved_Cost\", \"Funds_Released\"]\n",
    "].sum().sort_values(\"Project_Approved_Cost\", ascending=False)\n",
    "\n",
    "print(\"Funding by State:\\n\", state_funding)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4ca4dc37",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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bGnVHdz7HD/++GO9/vrrypo1q2Vfv379tGXLFnXp0kV79+7V0aNHtWTJEnXr1k2SVLRoUdWpU0fvvPOOtm3bpl27dqlDhw42zzy7tw7W8uXLFR4erjVr1ujkyZPauXOn+vbtq/fee0+S1LlzZ505c0bdunXT77//rp9++klDhw5Vr1695OTkpG3btikiIkI7d+7U6dOn9eOPP+rChQuWkjIoKEj79+/XkSNH9M8//1gW0X8SHLaUatmypfbv32/VkPr7++uDDz7QqlWrJEnlypWTq6uroqKiLMedP39eBw4csKwOX7lyZcXFxWn79u2WMdu2bVNcXNxDV5B3c3OTp6en1QMAAAAAgIzEZDJp8eLFypUrl15++WXVrFlThQoV0nfffffAY2rXrq1ly5YpKipKFSpUUKVKlTRu3DjLotiStHDhQlWoUEHNmzdXaGio+vbta5ldU6VKFb333ntq1qyZ8ubN+8CZPffMmDFDjRs3lpNTyoritdde07JlyyyTTdzd3dWvXz+1aNFClStXVrZs2TR//nyrY0JCQtSkSRPVq1dPYWFhKlGihCZPnvzQDO7u7lq1apUuXbqkChUq6PXXX1eNGjU0adIkq3GFCxdWhQoVtH//fstd9+4pVaqUNm7cqKNHj+qll15SmTJlNHjwYPn5+VnGzJw5UwEBAapataqaNGmid999N9Ulhx7k1VdfVXR0tFxdXdWiRQsVK1ZMzZs3V1xcnOXuevnz59fPP/+s7du3q3Tp0nrvvffUvn17S6no6empX375RfXq1VORIkU0aNAgjR071rKe1zvvvKOiRYuqfPnyyps3rzZv3mxzvrQymW1dKesJuHbtmo4dOyZJKlOmjMaNG6fq1avL29tbBQsWTDE+KChIPXr0sKxkL0mdOnXSsmXLFBkZKW9vb/Xp00cXL17Url27LNec1q1bV+fOndO0adMkSe+++64CAwO1dOlSm7PGx8fLy8tLcXFxhhdULHQOAAAAAI/v1q1bOnHihIKDg61mumRW06ZN04gRI3T27FmjozxUZGSkevTo8dDL3YYNG6bFixdr7969dsuVWT3s95GtHYqhC53v3LlT1atXtzzv1auXJKl169aKjIy06Rzjx4+Xi4uLmjZtqps3b6pGjRqKjIy0WgTtm2++Uffu3S136QsPD0/RdgIAAAAAkNmcOXNGP//8c6p3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IElavny5Vq1apRdffNGyrXbt2vrqq69Up04dA5MByGg6deqkGjVqKDo6Wn5+fpKk7777Tu3atVNkZKSx4TIQSinYrG3bttq3b5+qVq2qAQMGqH79+po4caLu3LnDddWw+OCDD9SlSxfdunVLZrNZ27dv17fffquRI0fq66+/NjoeHMzw4cP19ddfq1evXho8eLAGDhyokydPavHixRoyZIjR8WCwPXv2WD2/d5essWPHPvLOfMh8fH19dfHiRQUGBiowMFBbt25V6dKldeLECbFaBe7JnTt3qpfoeXl5KVeuXAYkgqPasWOHvv/++1R/aMaNNiBJQ4YM0cWLF1WzZk39+uuvWrlypTp06KA5c+botddeMzpehsGaUnhsp0+f1s6dO/XMM8+odOnSRseBA/nqq6/00Ucf6cyZM5Kk/Pnza9iwYWrfvr3ByeBonnnmGX3++eeqX7++cuTIob1791q2bd26VfPmzTM6IoAMokOHDgoICNDQoUM1depU9erVSy+88IJ27typJk2aaPr06UZHhAP48ssv9f3332v27NmWmQ0xMTFq3bq1mjRpoo4dOxqcEI5g/vz5atWqlcLCwhQVFaWwsDAdPXpUMTExaty4sWbOnGl0RDiQli1batu2bfrrr780b948buyURpRS+E+uXLnCpXt4oH/++UfJycnc0QYP5OHhocOHD6tgwYLy8/PT8uXLVbZsWR0/flxlypRRXFyc0RHhALhLFmyRnJys5ORkubjcvRBgwYIF2rRpk0JCQvTee+8pS5YsBieEIyhTpoyOHTumhIQEFSxYUNLdH7S6ubmpcOHCVmO5Y2PmVapUKXXs2FFdunSx3LgnODhYHTt2lJ+fn4YPH250RBhkyZIlKbYlJiaqZ8+eCgsLU3h4uGX7/f+NB6OUgs1Gjx6toKAgNWvWTJLUtGlTLVy4UL6+vvr555+ZLQUgzYoWLarZs2erYsWKeumll1S/fn31799f3333nbp166bY2FijI8JA3CULtrpz544+/vhjtWvXTgEBAUbHgQNLS5kwdOjQJ5gEjszDw0MHDx5UUFCQ8uTJo/Xr16tkyZI6fPiwXnnlFe7+mok5OTnZNM5kMikpKekJp3k6sKYUbDZt2jTNnTtXkhQVFaWoqCitWLFCCxYs0AcffKDVq1cbnBBGKVOmjEwmk01j+akj7te4cWOtXbtW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TZs2GR0RBnFyclJMTIzy5cuX6p8n9/Dnie2YKQWb5cyZU5MmTbI8j4uL0zfffKOlS5dq3759lFKQJMtPHqW7l3zGxcVJkho0aKDBgwcbGQ0OqEyZMpa/6FWvXl1DhgzRP//8ozlz5li+R8i8KlasqD179lBKwSadOnWSr6+vxo4dqwULFki6u87Ud999p1dffdXgdHAUJ06cMDoCMoDr168rX758ku6udXjhwgUVKVJEJUuW1O7duw1OByMlJyen+t94fJRSSLN169ZpxowZ+vHHHxUYGKjXXntN06dPNzoWHESBAgV0/vx5FSxYUCEhIVq9erXKli2rHTt2yM3Nzeh4cDARERG6evWqJGnEiBFq3bq1OnXqpJCQEM2cOdPgdDBa586d1bt3b509e1blypWTh4eH1X4us8G/NW7cWI0bNzY6BhwYJTdsUbRoUR05ckRBQUF67rnnNG3aNAUFBWnq1Kny8/MzOh4Mtm3bNl26dEl169a1bJs9e7aGDh2q69evq1GjRpo4cSL/9rERl+/BJmfPnlVkZKRmzJih69evq2nTppo6dar27dun0NBQo+PBgfTv31+enp763//+px9++EHNmzdXUFCQTp8+rZ49e2rUqFFGRwTg4Nq1a6cJEyYoZ86cKfZxmQ0epF27dqpataplXbJ74uPj1aNHD82YMcOgZHBEhw4dSvWGLKwBA0n65ptvlJiYqDZt2mjPnj2qXbu2Ll68qCxZsigyMlLNmjUzOiIMVLduXVWrVk39+vWTJP32228qW7as2rRpo+LFi+uTTz5Rx44dNWzYMGODZhCUUnikevXqadOmTWrQoIHeeust1alTR87OznJ1daWUwiNt27ZNmzdvVkhICH/RA2ATZ2dnnT9//pF3dmXGA+7n5OSkbNmyqX379powYYJlrY+///5b/v7+lJiQdPcujY0bN9Zvv/1mKbmlu4W3xF3VkLobN27o999/V8GCBZUnTx6j48Bgfn5+Wrp0qcqXLy9JGjhwoDZu3GhZa+z777/X0KFDdejQISNjZhgPXpkL+P9Wr16tDh06aPjw4apfv76cnZ2NjgQHlZiYqLZt2+r48eOWbRUrVlSvXr0opJCqv//+Wy1btpS/v79cXFwsd+G790DmdO8fiYGBgQ99AP+2fPlyrVixQrVr19bly5eNjgMH9P777ys4OFh///233N3d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cuXKZe9oADIQNzc3NW/eXFFRUTp06JCeffZZde7cWYGBgbp27ZrR8eAAOnfuLD8/P40ePVoNGjTQ2bNn9f3336tevXoUUkjhzz//VP369SXd/fPl+vXrMplM6tmzp7788kuD0wFPFy7fAwAY5tNPP9Ubb7yhFStWqEKFCjKZTNqxY4d+//13/fDDD5LurunQrFkzg5MCyCi4LAupmTp1qgoWLKjg4GBt3LhRGzduTHUcawVBkry9vXX16lVJUv78+XXgwAGVLFlSV65cYeY2kM4opQAAhgkPD9eRI0c0depU/fHHHzKbzapbt64WL16soKAgSVKnTp2MDQnA4aV2WdakSZO4LAsWrVq14lJO2Oyll15SVFSUSpYsqaZNm+r999/XunXrFBUVpRo1ahgdD3iqsKYUAAAAMqzOnTtr/vz5KliwoNq2bau3335buXPnNjoWgAzs0qVLunXrlvz9/ZWcnKxPP/1UmzZtUkhIiAYPHsyyAkA6opQCABjq119/1bRp03T8+HF9//33yp8/v+bMmaPg4GC9+OKLRscD4OCcnJxUsGBBlSlT5qEzYbgsCwAAx8PlewAAwyxcuFAtW7bUW2+9pd27dyshIUGSdPXqVUVEROjnn382OCEAR8dlWQDSi5OT0yP/PDGZTLpz546dEgFPP2ZKAQAMU6ZMGfXs2VOtWrWy3HK5UKFC2rt3r+rUqaOYmBijIwIAgEzip59+euC+6OhoTZw4UWazWTdv3rRjKuDpxkwpAP9Zrly5bP4p9aVLl55wGmQkR44c0csvv5xiu6enp65cuWL/QAAAINN69dVXU2z7/fffNWDAAC1dulRvvfWWRowYYUAy4OlFKQXgP5swYYLREZBB+fn56dixY5Y77d2zadMmFSpUyJhQAAAg0zt37pyGDh2qWbNmqXbt2tq7d69KlChhdCzgqUMpBeA/a926tdERkEF17NhR77//vmbMmCGTyaRz585py5Yt6tOnj4YMGWJ0PAAAkMnExcUpIiJCEydO1HPPPae1a9fqpZdeMjoW8NSilALwxNy8eVOJiYlW2zw9PQ1KA0fUt29fxcXFqXr16rp165Zefvllubm5qU+fPuratavR8QAAQCYyZswYjR49Wr6+vvr2229TvZwPQPpioXMA6er69evq16+fFixYoIsXL6bYn5SUZEAqOLobN27o0KFDSk5O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",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "state_funding.plot(kind=\"bar\", figsize=(12, 6), title=\"Funding by State\")\n",
    "plt.ylabel(\"Amount (Rs. in Cr)\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "59f3d025",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Funding by Sector:\n",
      "                     Project_Approved_Cost  Funds_Released\n",
      "Sector                                                   \n",
      "Road & Bridges                    1111.64          792.48\n",
      "T&C                                828.64           50.66\n",
      "Water Supply                       749.58          448.25\n",
      "Health                             669.41          264.82\n",
      "Education                          597.00           56.83\n",
      "Power                              276.51           86.11\n",
      "PMD_Infrastructure                 146.79            0.00\n",
      "Miscellaneous                      109.93            0.00\n"
     ]
    }
   ],
   "source": [
    "sector_funding = df.groupby(\"Sector\")[\n",
    "    [\"Project_Approved_Cost\", \"Funds_Released\"]\n",
    "].sum().sort_values(\"Project_Approved_Cost\", ascending=False)\n",
    "\n",
    "print(\"Funding by Sector:\\n\", sector_funding)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "46b50532",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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3r17FR4eri1btighIUFFihRR/fr1NWjQIJUuXfo/P3+3bt105coVrVix4r+HfQBWSgEAAAAAkI00a9ZMsbGx+uOPPzR69GhNnz5dAwcOzDDP1g2oPT09VbBgwayO+a/MmTNHgwcP1tKlS5WUlGSXr3nr1i27fJ2ssGrVKj3xxBO6efOmFi9erOjoaC1cuFB+fn4aPny40fEyjVIKAAAAAIBsxN3dXQEBAQoKClLHjh3VqVMnrVixQiNHjlSVKlU0Z84clShRQu7u7jKbzYqJidGzzz6rXLlyydfXV+3bt9f58+ctz3e30/d++OEHVatWTR4eHipRooRGjRql1NRUy/ErV67otddek7+/vzw8PFShQgWtWrVKmzdv1iuvvKKEhASZTCaZTCaNHDnSptd16tQpRUVF6Z133lHZsmX1zTffWB2/k3PFihUqXbq0PDw81LhxY505c8Yy5857MHPmTAUFBcnLy0vt2rWzWrXVrVs3tWnTRmPHjlVgYKBlddHBgwf19NNPy9PTU/ny5dNrr72ma9euSZLWrVsnDw+PDKu/+vXrp/r161vuR0VFqV69evL09FRQUJD69eun69evW47Hx8erVatW8vT0VPHixbV48WKb3htJSkpK0iuvvKIWLVpo5cqVatSokYoXL65atWrpo48+0syZMy1zIyMjVbNmTbm7u6tQoUJ65513rP77ffPNN6pYsaLltTZq1EjXr1/XyJEjNX/+fH3//feW/36bN2+2OWNmUUoBAAAAAJCNeXp6WlZF/f7771q2bJm+/fZb7du3T5LUpk0bXbp0SZGRkYqIiNCJEyfUoUOHez7funXr1LlzZ/Xr109HjhzRzJkzNW/ePI0ZM0aSlJ6erubNmysqKkqLFi3SkSNHNG7cODk7O6tOnTqaMmWKfH19FRsbq9jY2Luu4rqbOXPm6JlnnpGfn586d+6s2bNnZ5iTlJSkMWPGaP78+fr555+VmJioF1980WrOnffghx9+0Nq1a7Vv3z698cYbVnN++uknRUdHKyIiQqtWrVJSUpKaNWumPHnyaOfOnfr666+1YcMGvfnmm5KkRo0aKXfu3Pr2228tz5GWlqZly5apU6dOkm6XWk2bNlXbtm114MABffXVV9q2bZvlOaTbhdipU6e0ceNGffPNN5o+fbri4+Nten/WrVunixcvavDgwXc9fqdY/PPPP9WiRQvVqFFD+/fv12effabZs2dr9OjRkqTY2Fi99NJL6t69u6Kjo7V582a1bdtWZrNZAwcOVPv27S2r8WJjY1WnTh2b8v0b7CkFAAAAAEA2tWPHDi1ZskQNGzaUdPtUtIULF6pAgQKSpIiICB04cEAnT55UUFCQJGnhwoUqX768du7cqRo1amR4zjFjxuidd97Ryy+/LEkqUaKEPvjgAw0ePFgjRozQhg0btGPHDkVHR1tWGZUoUcLyeD8/P5lMJgUEBNj8OtLT0zVv3jxNnTpVkvTiiy+qf//++v333xUcHGyZl5KSomnTpqlWrVqSpPnz56tcuXLasWOHatasKUm6ceOG5s+fr8cee0ySNHXqVD3zzDOaOHGiJZO3t7e++OILubm5SZI+//xzJScna8GCBZa9uaZNm6ZWrVpp/Pjx8vf3V4cOHbRkyRL16NFD0u1i6/Lly2rX7vY+ZB9++KE6duyosLAwSVKpUqX0ySefqH79+vrss88UExOjNWvW6JdffrHknz17tsqVK2fTe3T8+HFJUtmyZe87b/r06QoKCtK0adNkMplUtmxZnTt3TkOGDNF7772n2NhYpaamqm3btipatKgkqWLFipbHe3p66ubNm5n67/dvUUplQ/beeO9+MrspHwAAAADgv1m1apVy5cql1NRUpaSk6Nlnn9XUqVM1ffp0FS1a1FJISVJ0dLSCgoIshZQkhYSEKHfu3IqOjr5rKbV7927t3LnTsjJKur0q6MaNG0pKStK+ffv02GOPZcmm2nesX79e169fV/PmzSVJ+fPnV5MmTTRnzhyFh4db5rm4uKh69eqW+2XLlrW8ljulVJEiRSyFlCTVrl1b6enpOnr0qKVoqVixoqWQkm6/T5UrV7baLL5u3bqWx/n7+6tTp06qXbu2zp07p8DAQC1evFgtWrRQnjx5LO/b77//bnVKntlsVnp6uk6ePKljx47dM78tzGazTfOio6NVu3ZtmUwmq9dy7do1nT17VpUrV1bDhg1VsWJFNW3aVE2aNNELL7xgeR32xOl7AAAAAABkIw0aNNC+fft09OhR3bhxQ999951lo/J/XoHPbDZblRMPGpdur1oaNWqU9u3bZ7kdPHhQx48fl4eHhzw9PbP8Nc2ZM0eXLl2Sl5eXXFxc5OLiotWrV2v+/PlKS0uzmnu33Pd6LX8/9vc5tr5Pf39czZo1VbJkSS1dulTJyclavny5OnfubJmXnp6uXr16Wb1v+/fv1/Hjx1WyZElLqXS/rPdzpwT87bff7jvvbq/l71/b2dlZERERWrNmjUJCQjR16lSVKVNGJ0+e/Fe5/gtKKQAAAAAAshFvb28FBweraNGicnV1ve/ckJAQxcTEWG0GfuTIESUkJNzztLHHH39cR48eVXBwcIabk5OTKlWqpLNnz+rYsWN3fbybm1uGIul+/vrrL33//fdaunSpVaGzb98+Xbt2TWvWrLHMTU1N1a5duyz3jx49qitXrlid0hYTE6Nz585Z7m/fvl1OTk73XdkVEhKiffv2WW1K/vPPP2d4XMeOHbV48WL98MMPcnJy0jPPPGM59vjjj+vw4cN3fd/c3NxUrly5e+a3RZMmTZQ/f35NmDDhrsfvPE9ISIiioqKsVlZFRUXJx8dHhQsXlnS7nKpbt65GjRqlvXv3ys3NTcuXL5eU+f9+/wWlFAAAAAAAj6hGjRqpUqVK6tSpk/bs2aMdO3aoa9euql+/vtVpZH/33nvvacGCBRo5cqQOHz6s6OhoffXVVxo2bJgkqX79+qpXr56ef/55RURE6OTJk1qzZo3Wrl0rSSpWrJiuXbumn376SRcvXlRSUtJ9My5cuFD58uVTu3btVKFCBcutUqVKatmypdWG566ururbt69+/fVX7dmzR6+88oqeeOIJy6l7kuTh4aGXX35Z+/fv19atW9WvXz+1b9/+vnskderUyfK4Q4cOadOmTerbt6+6dOkif39/q3l79uzRmDFj9MILL8jDw8NybMiQIdq+fbveeOMN7du3T8ePH9fKlSvVt29fSVKZMmXUrFkzvfrqq/r111+1e/du9ezZ0+aVZ3f2wfrxxx/VunVrbdiwQadOndKuXbs0ePBgvf7665KkPn366MyZM+rbt69+++03ff/99xoxYoT69+8vJycn/frrrwoPD9euXbsUExOj7777ThcuXLCUlMWKFdOBAwd09OhRXbx40bKJ/sNAKQUAAAAAwCPKZDJpxYoVypMnj+rVq6dGjRqpRIkS+uqrr+75mKZNm2rVqlWKiIhQjRo19MQTT2jSpEmWTbEl6dtvv1WNGjX00ksvKSQkRIMHD7asrqlTp45ef/11dejQQQUKFLjnyp475syZo+eee05OThkriueff16rVq3S+fPnJUleXl4a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nPx7JvODrs8HAAAAAAAAZLEcsacUAAAAAAAAHAulFAAAAAAAAOyOUgoAAAAAAAB2RykFAAAAAAAAu6OUgs3OnDmjs2fPWu7v2LFDYWFhmjVrloGp4CiSk5O1cuVKXb16NcOxxMRErVy5Ujdv3jQgGRzRvHnzlJSUZHQMAAAAAAailILNOnbsqE2bNkmS4uLi1LhxY+3YsUP/8z//o/fff9/gdDDarFmz9PHHH8vHxyfDMV9fX33yySf64osvDEgGRzR06FAFBASoR48eioqKMjoOACAHMJvNOn36tJKTk42OAgD4P5RSsNmhQ4dUs2ZNSdKyZctUoUIFRUVFacmSJZo3b56x4WC4xYsXKyws7J7Hw8LCNH/+fPsFgkM7e/asFi1apMuXL6tBgwYqW7asxo8fr7i4OKOjAcjmbt26pbNnzyomJsbqBpjNZpUqVcpq5T9wLydOnNCwYcP00ksvKT4+XpK0du1aHT582OBkcBTJyclWK/9Pnz6tKVOmaP369Qamyn5cjA6A7CMlJUXu7u6SpA0bNqh169aSpLJlyyo2NtbIaHAAx48fV+XKle95vFKlSjp+/LgdE8GROTs7q3Xr1mrdurXi4+O1aNEizZs3T8OHD1ezZs3Uo0cPtWrVSk5O/O4Etx07dkybN29WfHy80tPTrY699957BqWCIzl+/Li6d++eYfWl2WyWyWRSWlqaQcngKJycnFSqVCn99ddfKlWqlNFx4MAiIyPVvHlz1a1bV1u2bNGYMWNUsGBBHThwQF988YW++eYboyPCATz77LNq27atXn/9dV25ckW1atWSq6urLl68qEmTJql3795GR8wW+G4fNitfvrxmzJihrVu3KiIiQs2aNZMknTt3Tvny5TM4HYyWmpqqCxcu3PP4hQsXlJqaasdEyC4KFiyounXrqnbt2nJyctLBgwfVrVs3lSxZUps3bzY6HhzA559/rpCQEL333nv65ptvtHz5csttxYoVRseDg+jWrZucnJy0atUq7d69W3v27NGePXu0d+9e7dmzx+h4cBATJkzQoEGDdOjQIaOjwIG98847Gj16tCIiIuTm5mYZb9CggbZv325gMjiSPXv26KmnnpIkffPNN/L399fp06e1YMECffLJJwanyz5YKQWbjR8/Xs8995w+/PBDvfzyy5ZVMStXrrSc1oecq3z58tqwYYOqVat2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jGbPnq1q1arJZDJp165devXVVxUUFKSVK1caHREA8AhKSkpS3759NX/+fEmyLI/v16+fAgMD9c477xicEI7gjz/+0HPPPaeDBw/KZDJZVvDeOb2cjYkhSU899ZSCg4P1+eefW8rt1NRU9ezZU3/88Ye2bNlicEI4gpMnTyo1NVWlSpWyGj9+/LhcXV3verEW5Dyenp767bffVLRoUatS6siRI6pZs6auXbtmdMRswcnoAMg+5syZo8KFC6tmzZry8PCQu7u7atWqpUKFCumLL74wOh6AbKR48eIqUaLEPW/A3w0dOlT79+/X5s2b5eHhYRlv1KiRvvrqKwOTwZG89dZbKl68uM6fPy8vLy8dPnxYW7ZsUfXq1bV582aj48FB7Nq1S0OGDLFabeni4qLBgwez3xQsunXrpqioqAzjv/76q7p162b/QHBI5cuX19atWzOMf/3116pataoBibIn1r7DZgUKFNDq1at17NgxyyUvy5Urp9KlSxsdDUA2ExYWZnU/JSVFe/fu1dq1azVo0CBjQsFhrVixQl999ZWeeOIJq4sqhISEcOU9WGzfvl0bN25UgQIF5OTkJCcnJz355JMaO3as+vXrp7179xodEQ7A19dXMTExKlu2rNX4mTNn5OPjY1AqOJq9e/eqbt26GcafeOIJvfnmmwYkgiMaMWKEunTpoj///FPp6en67rvvdPToUS1YsECrVq0yOl62QSmFTCtdujRFFID/5K233rrr+KeffspvqpHBhQsXVLBgwQzj169f58qfsEhLS1OuXLkkSfnz59e5c+dUpkwZFS1aVEePHjU4HRxFhw4d1KNHD3300UeqU6eOTCaTtm3bpkGDBumll14yOh4chMlk0tWrVzOMJyQkcCowLFq1aqWvvvpK4eHhMplMeu+99/T444/rhx9+UOPGjY2Ol22wpxTuq3///vrggw/k7e2t/v3733fupEmT7JQKwKPqjz/+UJUqVZSYmGh0FDiQ+vXr64UXXlDfvn3l4+OjAwcOqHjx4nrzzTf1+++/a+3atUZHhAN46qmnNGDAALVp00YdO3bU5cuXNWzYMM2aNUu7d+/WoUOHjI4IB3Dr1i0NHjxYn332mVJTUyVJrq6u6t27t8aNGyd3d3eDE8IRtGzZUl5eXvryyy/l7Ows6Xbx3aFDB12/fl1r1qwxOCHw6GClFO5r7969SklJkSTt2bPnnr+R5jfVALLCN998o7x58xodAw5m7NixatasmY4cOaLU1FR9/PHHOnz4sLZv367IyEij48FBDBs2TNevX5d0+zLdLVu21FNPPaV8+fKx9xiUlJSkQYMGacWKFUpJSVGbNm305ptvys/PT8HBwVxlDVYmTJigevXqqUyZMnrqqackSVu3blViYqI2btxocDo4mlu3bik+Pl7p6elW40WKFDEoUfbCSikAgN1VrVrVqsw2m82Ki4vThQsXNH36dL322msGpoMjOnjwoD766CPt3r1b6enpevzxxzVkyBBVrFjR6GhwYJcuXVKePHn45Rk0aNAgTZ8+XZ06dZKnp6eWLFmi0NBQff3110ZHg4M6d+6cpk2bpv3798vT01OVKlXSm2++yS/PYHH8+HF17949w6b4ZrNZJpOJUz1tRCkFm6SmpsrDw0P79u1ThQoVjI4DIJsbNWqU1X0nJycVKFBAoaGhGTafRc5l62mcvr6+DzkJsoM7e7388wfGS5cuycXFhc9JDleyZEmNGTNGL774oiRpx44dqlu3rm7cuGE5PQsAMqNu3bpycXHRO++8o0KFCmX4BUjlypUNSpa9UErBZiVLltR3333HXy4AgF04OTndd4ULv4nE3zVv3lytWrVSnz59rMZnzJihlStXavXq1QYlgyNwc3PTyZMnVbhwYcuYp6enjh07pqCgIAOTwRFt2bLlvsfr1atnpyRwZN7e3tq9eze/UP2P2FMKNhs2bJiGDh2qRYsWsWwVwL+Snp6u9PR0ubj8/z8/58+f14wZM3T9+nW1bt1aTz75pIEJ4Ug2bdpk+bPZbFaLFi30xRdfWP1QCdzx66+/3vWiK6GhoXr33XcNSARHkpaWJjc3N6sxFxcXy2bnwN+FhoZmGPv7L0n4ZQgkKSQkRBcvXjQ6RrbHSinYrGrVqvr999+VkpKiokWLytvb2+r4nj17DEoGILt45ZVX5OrqqlmzZkmSrl69qvLly+vGjRsqVKiQjhw5ou+//14tWrQwOCkckY+Pj/bv368SJUoYHQUOyNvbW7/88kuGfcYOHjyoWrVqKSkpyaBkcAROTk5q3ry51dX1fvjhBz399NNW39N+9913RsSDg0lISLC6n5KSor1792r48OEaM2aMGjZsaFAyOJKNGzdq2LBhCg8PV8WKFeXq6mp1nNPGbcNKKdisTZs2RkcAkM39/PPPmjZtmuX+ggULlJqaquPHj8vPz09DhgzRhx9+SCkFINNq1KihWbNmaerUqVbjM2bMULVq1QxKBUfx8ssvZxjr3LmzAUmQHfj5+WUYa9y4sdzd3fX2229r9+7dBqSCo2nUqJEkZSgp2V4gc1gpBQCwG29vbx06dEjFixeXJLVt21aFCxe2/BB55MgRhYaGKj4+3siYcFCslML9/Pzzz2rUqJFq1Khh+QHhp59+0s6dO7V+/XrLZd0B4N+Kjo5WjRo1dO3aNaOjwAFERkbe93j9+vXtlCR7Y6UU/rU//vhDycnJKleunJycnIyOAyAb8PDwUHJysuX+L7/8og8//NDqON/o4X7ut/E5cra6detq+/bt+vDDD7Vs2TLLJdxnz56tUqVKGR0PQDZy4MABq/tms1mxsbEaN24cF32CBaVT1qCUwgOlpKRo9OjR2rNnj5544gm988476ty5s5YtWyZJKlOmjFavXq1ixYoZGxSAw6tcubIWLlyosWPHauvWrTp//ryefvppy/ETJ04oMDDQwIRwJG3btrW6f+PGDb3++usZ9jRkDxjcUaVKFS1evNjoGACyuSpVqshkMumfJxU98cQTmjNnjkGp4KiSkpIUExOjW7duWY1XqlTJoETZC6UUHuidd97RwoUL1bp1a82ZM0c7duzQ0aNHtWTJEjk5OemDDz7Qu+++yzeBAB5o+PDhatGihZYtW6bY2Fh169ZNhQoVshxfvny56tata2BCOJJ/7unB/i+4n5iYmPseL1KkiJ2SAMjuTp48aXXfyclJBQoUkIeHh0GJ4IguXLigV155RWvWrLnrcfaUsg2lFB7om2++0bx589SiRQsdO3ZMZcuW1Y8//qjmzZtLkgoWLKhOnToZnBJAdtCgQQPt3r1bERERCggIULt27ayOV6lSRTVr1jQoHRzN3LlzjY6AbKRYsWL3Pb2THw4A2CIlJUXdunXTzJkzVbp0aaPjwIGFhYXp8uXL+uWXX9SgQQMtX75c58+f1+jRozVx4kSj42UbbHSOB3J1ddWpU6dUuHBhSZKnp6cOHDhg2Z8hNjZWQUFBSk1NNTImAADIwfbv3291/84l3CdNmqQxY8ZkOB0UAO6lQIECioqKYj863FehQoX0/fffq2bNmvL19dWuXbtUunRprVy5UhMmTNC2bduMjpgtsFIKD5SWliZXV1fLfRcXFzk7O1vuOzk5ZTjfGgAAwJ7utvlw9erVFRgYqA8//JBSCoDNunbtqtmzZ2vcuHFGR4EDu379ugoWLChJyps3ry5cuKDSpUurYsWK2rNnj8Hpsg9KKdhk3bp1lr090tPT9dNPP+nQoUOSpCtXrhiYDAAA4N5Kly6tnTt3Gh0DQDZy69YtffHFF4qIiFD16tUzXGBj0qRJBiWDIylTpoyOHj2qYsWKqUqVKpo5c6aKFSumGTNmWO2Zivvj9D08kJOT0wPnmEwm9moAAACGSUxMtLp/5xLuI0eO1G+//aZ9+/YZEwxAttOgQYP7Ht+0aZOdksCRLV682LIH2d69e9W0aVP99ddfcnNz07x589ShQwejI2YLlFIAALtKS0vTtm3bVKlSJeXJk8foOAAeEU5OThk2OjebzQoKCtLSpUtVu3Ztg5IBAHKCpKQk/fbbbypSpIjy589vdJxsg1IKAGB3Hh4eio6OVvHixY2OAuARERkZaXX/ziXcg4OD5eLCjhUAbNe9e3d9/PHH8vHxsRq/fv26+vbtqzlz5hiUDHj0UEoBAOyuRo0aGjdunBo2bGh0FAAAACvOzs6KjY21bGJ9x8WLFxUQEMBVx3Ow/v372zyXvcdsw6+NAAB2N2bMGA0cOFAffPCBqlWrlmEDUV9fX4OSAchOVq5cafPc1q1bP8QkAB4FiYmJMpvNMpvNunr1qjw8PCzH0tLStHr16gxFFXKWvXv32jTvn6eT495YKQUAsLu/X0Dh7/9om81mLpwAwGb/vBiLyWTS37+1/fv/X/j/CoAHudvedH9nMpk0atQovfvuu3ZMBTzaWCkFALA7rloDICukp6db/rxhwwYNGTJE4eHhql27tkwmk6KiojRs2DCFh4cbmBJAdrFp0yaZzWY9/fTT+vbbb5U3b17LMTc3NxUtWlSBgYEGJgQePayUQqYtX75cderUkb+/v2VsypQpCgsLMy4UAADI0SpUqKAZM2boySeftBrfunWrXnvtNUVHRxuUDEB2c/r0aRUpUoRTsJBB27ZtbZ773XffPcQkjw6nB08BrHXr1k2FCxdWy5YttW/fPr3xxhsaMmSI0bEAZDNbt25V586dVadOHf3555+SpIULF2rbtm0GJwOQHZ04cUJ+fn4Zxv38/HTq1Cn7BwKQbUVHR+vnn3+23P/0009VpUoVdezYUZcvXzYwGYzm5+dn8w22YaUU/pVTp05p6tSpmjJliry8vPTjjz+qXr16RscCkE18++236tKlizp16qSFCxfqyJEjKlGihKZPn65Vq1Zp9erVRkcEkM3Uq1dPrq6uWrRokQoVKiRJiouLU5cuXXTr1i1FRkYanBBAdlGxYkWNHz9eLVq00MGDB1W9enUNGDBAGzduVLly5TR37lyjIwKPDFZK4YF++OEHbdy40WqsSJEiOn78uIoUKSJXV1clJycblA5AdjR69GjNmDFDn3/+uVxdXS3jderU0Z49ewxMBiC7mjNnjuLj41W0aFEFBwcrODhYRYoUUWxsrL744guj4wHIRk6ePKmQkBBJt3+R1qpVK4WHh2v69Olas2aNwengSFJTU7VhwwbNnDlTV69elSSdO3dO165dMzhZ9sFG53ig4cOHa9KkSVZj3bt31/Hjx7V161Z9//33Cg8PV9OmTQ1KCCC7OXr06F1XV/r6+urKlSv2DwQg2wsODtaBAwe0YcMGRUdHy2w2KyQkRI0aNWJfGACZ4ubmpqSkJEm3L6LQtWtXSVLevHmVmJhoZDQ4kNOnT6tZs2aKiYnRzZs31bhxY/n4+GjChAm6ceOGZsyYYXTEbIGVUnigY8eOKTg42HJ/4MCB2rdvn7Zs2aLHHntMjRs31u7duw1MCCC7KVSokH7//fcM49u2bVOJEiUMSAQgu2rRooUSEhIk3b5c+44dO9S1a1e99dZbaty4sS5dumRZ8QAAtnjyySfVv39/ffDBB9qxY4eeeeYZSbd/LnrssccMTgdH8dZbb6l69eq6fPmyPD09LePPPfecfvrpJwOTZS+UUnigPHny6Ndff5UkjRgxQlFRUdq8ebMKFCggSfrrr7/k6+trZEQA2UyvXr301ltv6ddff5XJZNK5c+e0ePFiDRw4UH369DE6HoBsZN26dbp586bl/vjx43Xp0iXL/dTUVB09etSIaACyqWnTpsnFxUXffPONPvvsMxUuXFiStGbNGjVr1szgdHAU27Zt07Bhw+Tm5mY1XrRoUctFfPBgnL6HB+rcubM6d+6s/v3768qVK+rUqZN8fHwkSdevX9ewYcP01FNPGZwSQHYyePBgJSQkqEGDBrpx44bq1asnd3d3DRw4UG+++abR8QBkI/+8Zg/X8AHwXxUpUkSrVq3KMD558mQD0sBRpaenKy0tLcP42bNnLT8v48G4+h4eyGw2a9GiRXJyclLDhg3VuHFjJSQkqHz58tq3b5/S0tK0Y8cOFStWzOioALKZpKQkHTlyROnp6QoJCVGuXLmMjgQgm3FyclJcXJwKFiwoSfLx8dH+/fstpwKfP39egYGBd/3BAQAeJDk5WSkpKVZjnCUCSerQoYP8/Pw0a9Ys+fj46MCBAypQoICeffZZFSlShKs02ohSCpmWnJysuXPn6uDBgypcuLB69OhhufQyANiie/fu+vjjjzP8Fun69evq27ev5syZY1AyANmNs7Oz4uLiLNsK3PnBoHjx4pIopQBk3vXr1zVkyBAtW7ZMf/31V4bj/P8E0u2r7DVo0EDOzs46fvy4qlevruPHjyt//vzasmWL5ZcluD9KKQCA3Tk7Oys2NjbDP9YXL15UQECAUlNTDUoGILtxcnJS8+bN5e7uLkn64Ycf9PTTT8vb21uSdPPmTa1du5YfIgHY7I033tCmTZv0/vvvq2vXrvr000/1559/aubMmRo3bpw6depkdEQ4iOTkZC1dulS7d+9Wenq6Hn/8cXXq1Mlq43PcH6UUAMBuEhMTZTablSdPHh0/ftyyskG6/VvHH374Qe+8847OnTtnYEoA2ckrr7xi0zxOowBgqyJFimjBggUKDQ2Vr6+v9uzZo+DgYC1cuFBffvmlVq9ebXRE4JHBRucAALvJnTu3TCaTTCaTSpcuneG4yWTSqFGjDEgGILuibAKQ1S5dumQ5BdjX19dyRc8nn3xSvXv3NjIaHMjYsWPl7++v7t27W43PmTNHFy5c0JAhQwxKlr1QSgEA7GbTpk0ym816+umn9e233ypv3ryWY25ubipatKgCAwMNTAgAAHK6EiVK6NSpUypatKhCQkK0bNky1axZUz/88INy585tdDw4iJkzZ2rJkiUZxsuXL68XX3yRUspGnL4HALC706dPKygoSE5OTkZHAQAAsDJ58mQ5OzurX79+2rRpk5555hmlpaUpNTVVkyZN0ltvvWV0RDgADw8PRUdHW1bV3fHHH38oJCREN27cMChZ9sJKKQCA3RUtWlSSlJSUpJiYGN26dcvqeKVKlYyIBQAAoLffftvy5wYNGui3337Trl27VLJkSVWuXNnAZHAkQUFB+vnnnzOUUj///DMr/zOBUgr3VbVqVZlMJpvm7tmz5yGnAfCouHDhgl555RWtWbPmrse5ShYAADBCSkqKmjRpopkzZ1r2vyxSpIiKFClicDI4mp49eyosLEwpKSl6+umnJUk//fSTBg8erAEDBhicLvuglMJ9tWnTxvLnGzduaPr06QoJCVHt2rUlSb/88osOHz6sPn36GJQQQHYUFhamy5cv65dfflGDBg20fPlynT9/XqNHj9bEiRONjgcAAHIoV1dXHTp0yOZfzCPnGjx4sC5duqQ+ffpYVv17eHhoyJAhGjp0qMHpsg/2lILNevbsqUKFCumDDz6wGh8xYoTOnPnf9u4+pqr6geP454DyIA+RooUoXOFKiWTCWE9sXCDNGmUPbo6mJYpaWSpqtdLAstrMlhrVVqsQnBXTQrNhaiPAblcLKNSSIg2kJWTlQ4GiBPf3R5PFT0u0vMfLfb82tsv3nHvuh/vf+fD9fs8Pys/PNykZAHcTFham999/X9dcc42Cg4NVVVWlmJgYbdy4UcuWLZPdbjc7IgAA8FALFixQ3759tXTpUrOjwA20tLSotrZW/v7+Gj58uHx9fc2O5FYopdBjl1xyiaqqqjR8+PBu4999950SExN19OhRk5IBcDfBwcHatWuXLBaLLBaL3nrrLSUlJam+vl4jR47UsWPHzI4IAAA81OzZs7V69WpZrVYlJiYqICCg2/Hly5eblAwXs99++00ff/yxrrjiCo0YMcLsOG6D5XvoMX9/f9nt9tNKKbvdLj8/P5NSAXBHV1xxhb799ltZLBaNHj1ar732miwWi1599VWFhYWZHQ8AAHiwr776SgkJCZKkurq6bsdY1odTJk6cqOTkZD300EM6fvy4EhMT1dDQIKfTqaKiIk2YMMHsiG6BUgo9lp2drQceeEDV1dW67rrrJP25p1R+fr5yc3NNTgfAnWRnZ6upqUnSn0uAx40bp7feeks+Pj4qKCgwNxwAAPA4u3btUlxcnLy8vFRWVmZ2HLiBbdu2adGiRZKk9evXy+l06siRIyosLNQzzzxDKdVDLN/DOVm7dq1efPFF1dbWSpJGjBihuXPnauLEiSYnA+AO9u7dK6vVetr4sWPH9M033ygiIkKhoaEmJAMAAJ7M29tbTU1NGjRokKKiolRZWakBAwaYHQsXMX9/f9XV1Wno0KG69957NXjwYC1dulSNjY2KjY1VS0uL2RHdAjOlcE4mTpxIAQXgvMXExCg8PFypqalKS0tTSkqKLBaL+vXr1zVNHgAAwNVCQkJUX1+vQYMGqaGhQZ2dnWZHwkVu6NCh2r59u/r376/NmzerqKhIknT48GG2tzkHlFIAAJepqKhQRUWFysvL9eCDD6qtrU0RERFKS0tTamqqUlNTFR4ebnZMAADgYSZMmCCbzaawsDAZhqHExER5e3uf8dzvv//exelwMcrOztakSZMUGBioyMhIpaSkSPpzWd9VV11lbjg3wvI99FhHR4dWrFihtWvXqrGxUSdPnux2/NChQyYlA+CO2tvbtX37dpWXl6u8vFw7duzQiRMnZLVa9e2335odDwAAeJjNmzdr7969mjNnjpYsWaKgoKAznjd37lwXJ8PFqqqqSj/88IPGjh2rwMBASVJJSYlCQkKUlJRkcjr3QCmFHsvNzdUbb7yh+fPnKycnR4sWLVJDQ4M2bNig3NxczZkzx+yIANzQ8ePHZbfbtWXLFr3++utqaWlRR0eH2bEAAICHmjp1qvLy8v62lALw36GUQo9FR0crLy9P6enpCgoKUk1NTdfYjh079Pbbb5sdEYAbaGtrk8PhUFlZmcrLy1VZWalhw4bJZrMpOTlZNpuNJXwAAAC46MyfP19PP/20AgICNH/+/H88d/ny5S5K5d7YUwo91tzc3LU2NjAwUEePHpUk3XrrrcrJyTEzGgA3YbPZVFlZqejoaCUnJ2v27Nmy2Wy67LLLzI4GAAAgSWptbdXSpUtVWlqqgwcPnrbpOXtKea4vv/xS7e3tXa/x71FKoceGDBmipqYmRUREyGq1auvWrUpISFBlZaV8fX3NjgfADTgcDoWFhSk1NVUpKSlKTk5WaGio2bEAAAC6TJ8+XRUVFbrnnnu6Nj4HJKmsrOyMr3H+WL6HHnvssccUHByshQsX6t1339Xdd98ti8WixsZGzZs3T0uXLjU7IoCLXGtrqz755BOVl5errKxMNTU1iomJkc1mU0pKimw2mwYOHGh2TAAA4MFCQkJUUlLCRtU4o2nTpp31HMMw9Oabb7ogjfujlMJ527FjhxwOh6xWq8aPH292HABu6Pfff5fdbu/aX2rnzp0aPny4vvrqK7OjAQAADzVs2DBt2rRJI0aMMDsKLkJeXl6KjIxUfHy8/qlOWb9+vQtTuS9KKQCAaTo7O1VZWamysjKVlZXJbrerra2Np+8BAADTrFmzRu+//74KCwvVr18/s+PgIjNr1iwVFRUpIiJC06ZN0+TJk9W/f3+zY7ktSimck3379mnlypWqra2VYRiKjY3V3LlzFRUVZXY0AG6gs7NTVVVVXcv3Pv30U7W2tio8PFypqaldP5GRkWZHBQAAHio+Pl779u2T0+mUxWJR3759ux3/4osvTEqGi8WJEydUXFys/Px8ORwOpaenKysrSzfddBN7kJ0jSin02JYtWzR+/HiNHj1aSUlJcjqdcjgc2rlzpz744AONHTvW7IgALnLBwcFqbW1VWFiYUlJSlJKSotTUVEVHR5sdDQAAQJL01FNP/ePxxYsXuygJ3MH+/ftVUFCg1atXq729XXv27FFgYKDZsdwGpRR6LD4+XuPGjTttQ/PHHntMW7du5T8GAM7qtddeU2pqqmJiYsyOAgAAAPxrjY2NKigoUEFBgU6ePKlvvvmGUuocUEqhx/z8/LR7924NHz6823hdXZ1GjRqltrY2k5IBAAAAAOAaf12+Z7fbdeutt2rq1Km6+eab5eXlZXY8t9LH7ABwHwMHDlRNTc1ppVRNTY0GDRpkUioAAAAA+PcuvfTSHu0HdOjQIRekwcXqrxudT506VUVFRRowYIDZsdwWpRR6bMaMGZo5c6a+//573XDDDTIMQ3a7Xc8995wWLFhgdjwAAAAAOG8rV640OwLcwKuvvqqIiAgNGzZMFRUVqqioOON5xcXFLk7mnli+hx5zOp1auXKlXnjhBR04cECSNHjwYD3yyCOaM2cOTxkAAAAA4DHeeecdjR8/XgEBAWZHgQtlZmb26N531apVLkjj/iilcF5+//13SVJQUJAk6ccff1R4eLiZkQAAAADAZYKDg1VTU6OoqCizowBuix24cF6CgoIUFBSk5uZmzZ49W1ar1exIAAAAAOAyzO8A/j1KKZzVkSNHNGnSJA0cOFCDBw9WXl6eOjs7lZubq6ioKO3YsUP5+flmxwQAAAAAAG6Ejc5xVgsXLtS2bds0ZcoUbd68WfPmzdPmzZvV1tamDz/8UDabzeyIAAAAAADAzVBK4axKSkq0atUqjRkzRrNmzZLValVMTAxPpwAAAAAAAOeN5Xs4qwMHDig2NlaSFBUVJT8/P02fPt3kVAAAAAAAwJ1RSuGsOjs71bdv367fvb29eewpAAAAAI8WGRnZ7T4JwLkznDwyAGfh5eWlW265Rb6+vpKkDz74QGlpaacVU8XFxWbEAwAAAID/jNPpVHV1tRoaGmQYhoYNG6b4+HgZhmF2NKDXYU8pnNWUKVO6/T558mSTkgAAAADAhVNWVqasrCzt379fp+ZvnCqm8vPzlZycbHJCoHdhphQAAAAAwOPt3btXV199ta699lrNnTtXV155pZxOp/bs2aO8vDxVVVVp165dioqKMjsq0GtQSgEAAAAAPN5DDz2k2tpalZaWnnbM6XRqzJgxio2N1UsvvWRCOqB3YqNzAAAAAIDHKy8vV3Z29hmPGYah7OxslZWVuTYU0MtRSgEAAAAAPF5jY6Ouuuqqvz0eFxen/fv3uzAR0PtRSgEAAAAAPF5LS4v69ev3t8f79eunY8eOuTAR0Pvx9D0AAAAAACTt2bNHzc3NZzz2yy+/uDgN0Pux0TkAAAAAwON5eXnJMAyd6Rb51LhhGOro6DAhHdA7MVMKAAAAAODx6uvrzY4AeBxmSgEAAAAAAMDlmCkFAAAAAPB4jY2NPTovIiLiAicBPAczpQAAAAAAHs/b27vr9anbZMMwuo2xpxTw32KmFAAAAADA4xmGoSFDhigzM1O33Xab+vThdhm40JgpBQAAAADweM3NzSosLFRBQYEOHz6syZMnKysrSyNGjDA7GtBrUUoBAAAAAPAXdrtdq1at0rp16xQbG6usrCxlZWXJy8vL7GhAr0IpBQAAAADAGfz000+6++67VVFRoZ9//ln9+/c3OxLQq1DzAgAAAADwFw6HQ9OnT1dMTIxaWlr0yiuvKCQkxOxYQK/Dzm0AAAAAAI/X1NSk1atXa9WqVTp8+LAmTZokh8OhkSNHmh0N6LVYvgcAAAAA8Hg+Pj4aPHiwpkyZovHjx6tv375nPG/UqFEuTgb0XpRSAAAAAACP99dNzA3D0JlulQ3DUEdHhytjAb0ay/cAAAAAAB6vvr7e7AiAx2GmFAAAAADA4x0/flwPP/ywNmzYoPb2do0ZM0Z5eXkKDQ01OxrQa/H0PQAAAACAx8vNzVVBQYHS09OVkZGhjz76SA888IDZsYBejZlSAAAAAACPFx0drWeffVYZGRmSpM8//1xJSUlqa2uTt7e3yemA3olSCgAAAADg8Xx8fFRfX6/w8PCuMX9/f9XV1Wno0KEmJgN6L5bvAQAAAAA8XkdHh3x8fLqN9enTR3/88YdJiYDej6fvAQAAAAA8ntPpVGZmpnx9fbvG2tradP/99ysgIKBrrLi42Ix4QK9EKQUAAAAA8HhTpkw5bWzy5MkmJAE8B3tKAQAAAAAAwOXYUwoAAAAAAAAuRykFAAAAAAAAl6OUAgAAAAAAgMtRSgEAAAAAAMDlKKUAAAAAAADgcpRSAAAALnTw4EHdd999ioiIkK+vry6//HKNGzdO27dv/0+ub7FYtHLlyv/kWgAAABdSH7MDAAAAeJIJEyaovb1dhYWFioqK0k8//aTS0lIdOnTI7GjdnDx5Uj4+PmbHAAAAvRgzpQAAAFzkyJEjstvteu6555SamqrIyEhdc801evzxx5Weni5JOnr0qGbOnKlBgwYpODhYaWlp2rlzZ7frbNy4UYmJifLz81NoaKjuuusuSVJKSor279+vefPmyTAMGYbR9Z733ntPI0eOlK+vrywWi1544YVu17RYLHrmmWeUmZmpSy65RDNmzLjA3wYAAPB0lFIAAAAuEhgYqMDAQG3YsEEnTpw47bjT6VR6erqam5u1adMmVVdXKyEhQTfeeGPXTKqSkhLdddddSk9P15dffqnS0lIlJiZKkoqLizVkyBAtWbJETU1NampqkiRVV1dr4sSJysjI0O7du/Xkk08qJydHBQUF3T7/+eefV1xcnKqrq5WTk3NhvwwAAODxDKfT6TQ7BAAAgKd47733NGPGDB0/flwJCQmy2WzKyMjQqFGj9PHHH+vOO+/UwYMH5evr2/Ueq9WqRx99VDNnztQNN9ygqKgorVmz5ozXt1gsys7OVnZ2dtfYpEmT9PPPP2vr1q1dY48++qhKSkr09ddfd70vPj5e69evvzB/OAAAwP9hphQAAIALTZgwQQcOHNDGjRs1btw4lZeXKyEhQQUFBaqurlZLS4sGDBjQNasqMDBQ9fX12rdvnySppqZGN9544zl9Zm1trZKSkrqNJSUl6bvvvlNHR0fX2KkZVwAAAK7ARucAAAAu5ufnp7Fjx2rs2LHKzc3V9OnTtXjxYs2aNUthYWEqLy8/7T0hISGSJH9//3P+PKfT2W1/qVNj/y8gIOCcrw0AAHC+mCkFAABgstjYWLW2tiohIUHNzc3q06ePrFZrt5/Q0FBJ0qhRo1RaWvq31/Lx8ek2++nU9e12e7cxh8OhmJgYeXt7//d/EAAAQA9QSgEAALjIr7/+qrS0NK1Zs0a7du1SfX291q1bp2XLlun222/XmDFjdP311+uOO+7Qli1b1NDQIIfDoSeeeEJVVVWSpMWLF+udd97R4sWLVVtbq927d2vZsmVdn2GxWLRt2zb9+OOP+uWXXyRJCxYsUGlpqZ5++mnV1dWpsLBQL7/8sh5++GFTvgcAAACJUgoAAMBlAgMDde2112rFihVKTk5WXFyccnJyNGPGDL388ssyDEObNm1ScnKypk2bppiYGGVkZKihoUGXXXaZJCklJUXr1q3Txo0bNXr0aKWlpemzzz7r+owlS5aooaFB0dHRGjhwoCQpISFBa9euVVFRkeLi4pSbm6slS5YoMzPTjK8BAABAEk/fAwAAAAAAgAmYKQUAAAAAAACXo5QCAAAAAACAy1FKAQAAAAAAwOUopQAAAAAAAOBylFIAAAAAAABwOUopAAAAAAAAuBylFAAAAAAAAFyOUgoAAAAAAAAuRykFAAAAAAAAl6OUAgAAAAAAgMtRSgEAAAAAAMDlKKUAAAAAAADgcv8Dd4dCn/YEtjMAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sector_funding.plot(kind=\"bar\", figsize=(12, 6), title=\"Funding by Sector\", colormap='viridis')\n",
    "plt.ylabel(\"Amount (Rs. in Cr)\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ef1eebd3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-13 22:09:45.936 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\Users\\aaksh\\anaconda3\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n",
      "2025-05-13 22:09:45.939 No runtime found, using MemoryCacheStorageManager\n",
      "2025-05-13 22:09:45.941 No runtime found, using MemoryCacheStorageManager\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "DeltaGenerator()"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import pydeck as pdk\n",
    "\n",
    "st.set_page_config(page_title=\"Cultural India Explorer\", layout=\"wide\")\n",
    "\n",
    "# Header\n",
    "st.title(\"🎨 Cultural India Explorer\")\n",
    "st.markdown(\"Discover traditional art forms, cultural experiences, and travel responsibly across India.\")\n",
    "\n",
    "# Load example data (you can replace this with your curated CSV or database)\n",
    "@st.cache_data\n",
    "def load_data():\n",
    "    data = pd.DataFrame({\n",
    "        \"State\": [\"Rajasthan\", \"Odisha\", \"Maharashtra\", \"Kerala\"],\n",
    "        \"Art_Form\": [\"Pichwai Painting\", \"Pattachitra\", \"Warli Art\", \"Kathakali\"],\n",
    "        \"Experience\": [\"Visit local art school\", \"See artisans live\", \"Tribal mural walk\", \"Watch a Kathakali show\"],\n",
    "        \"Latitude\": [26.9124, 20.9517, 19.7515, 10.8505],\n",
    "        \"Longitude\": [75.7873, 85.0985, 75.7139, 76.2711],\n",
    "        \"Category\": [\"Painting\", \"Painting\", \"Tribal Art\", \"Dance\"]\n",
    "    })\n",
    "    return data\n",
    "\n",
    "data = load_data()\n",
    "\n",
    "# Sidebar filters\n",
    "st.sidebar.header(\"Filter Experiences\")\n",
    "selected_category = st.sidebar.multiselect(\"Category\", options=data[\"Category\"].unique(), default=data[\"Category\"].unique())\n",
    "\n",
    "# Filter data\n",
    "filtered_data = data[data[\"Category\"].isin(selected_category)]\n",
    "\n",
    "# Art Showcase\n",
    "st.subheader(\"🖼️ Featured Art Forms\")\n",
    "for index, row in filtered_data.iterrows():\n",
    "    st.markdown(f\"### {row['Art_Form']} ({row['State']})\")\n",
    "    st.markdown(f\"**Experience**: {row['Experience']}\")\n",
    "    st.markdown(\"---\")\n",
    "\n",
    "# Interactive Map\n",
    "st.subheader(\"🗺️ Explore on Map\")\n",
    "st.pydeck_chart(pdk.Deck(\n",
    "    map_style=\"mapbox://styles/mapbox/light-v9\",\n",
    "    initial_view_state=pdk.ViewState(\n",
    "        latitude=21.1466,\n",
    "        longitude=79.0888,\n",
    "        zoom=4.5,\n",
    "        pitch=0,\n",
    "    ),\n",
    "    layers=[\n",
    "        pdk.Layer(\n",
    "            \"ScatterplotLayer\",\n",
    "            data=filtered_data,\n",
    "            get_position='[Longitude, Latitude]',\n",
    "            get_color='[200, 30, 0, 160]',\n",
    "            get_radius=50000,\n",
    "        ),\n",
    "    ],\n",
    "))\n",
    "\n",
    "# Responsible Tourism Tips\n",
    "st.subheader(\"♻️ Responsible Travel Tips\")\n",
    "st.markdown(\"\"\"\n",
    "- 🛍️ Support local artisans and buy authentic crafts.\n",
    "- 🧑‍🎓 Learn about the history before you visit.\n",
    "- 📸 Ask for permission before taking photos of people/art.\n",
    "- 🌿 Respect natural and cultural sites.\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5e331ac2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DeltaGenerator()"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.cluster import KMeans, AgglomerativeClustering, DBSCAN\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import requests\n",
    "import urllib3\n",
    "\n",
    "st.set_page_config(page_title=\"NESIDS Project Clustering\", layout=\"wide\")\n",
    "st.title(\"NESIDS Project Data Analysis\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "65fa2149",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-13 22:09:49.842 No runtime found, using MemoryCacheStorageManager\n"
     ]
    }
   ],
   "source": [
    "@st.cache_data\n",
    "def load_data():\n",
    "    url = \"https://nlcpr.mdoner.gov.in/ner/webservices/paryas/nesidsparyas.php\"\n",
    "    response = requests.get(url, verify=False)\n",
    "    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n",
    "    data = response.json()\n",
    "    df = pd.DataFrame(data)\n",
    "    df.rename(columns={\n",
    "        'Project Approved Cost (Rs. in Cr)': 'Project_Approved_Cost',\n",
    "        'Funds Released (Rs. in Cr)': 'Funds_Released'\n",
    "    }, inplace=True)\n",
    "    df[['Project_Approved_Cost', 'Funds_Released']] = df[['Project_Approved_Cost', 'Funds_Released']].apply(pd.to_numeric, errors='coerce')\n",
    "    df.dropna(subset=['Project_Approved_Cost', 'Funds_Released'], inplace=True)\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a2599a02",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-13 22:09:51.627 No runtime found, using MemoryCacheStorageManager\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "DeltaGenerator()"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = load_data()\n",
    "st.subheader(\"Dataset Preview\")\n",
    "st.dataframe(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "530f81e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "st.subheader(\"Descriptive Statistics\")\n",
    "st.write(df[['Project_Approved_Cost', 'Funds_Released']].describe())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "69250a74",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-13 22:09:55.653 Session state does not function when running a script without `streamlit run`\n",
      "C:\\Users\\aaksh\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "st.subheader(\"Clustering\")\n",
    "method = st.selectbox(\"Select clustering method\", ['KMeans', 'Agglomerative', 'DBSCAN'])\n",
    "\n",
    "X = df[['Project_Approved_Cost', 'Funds_Released']].values\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "if method == 'KMeans':\n",
    "    n_clusters = st.slider(\"Select number of clusters\", 2, 10, 3)\n",
    "    model = KMeans(n_clusters=n_clusters, random_state=42)\n",
    "    labels = model.fit_predict(X_scaled)\n",
    "elif method == 'Agglomerative':\n",
    "    n_clusters = st.slider(\"Select number of clusters\", 2, 10, 3)\n",
    "    model = AgglomerativeClustering(n_clusters=n_clusters)\n",
    "    labels = model.fit_predict(X_scaled)\n",
    "else:  # DBSCAN\n",
    "    eps = st.slider(\"Epsilon (eps)\", 0.1, 5.0, 0.5)\n",
    "    min_samples = st.slider(\"Minimum Samples\", 2, 10, 5)\n",
    "    model = DBSCAN(eps=eps, min_samples=min_samples)\n",
    "    labels = model.fit_predict(X_scaled)\n",
    "\n",
    "df['Cluster'] = labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3c1e3c70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DeltaGenerator()"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "st.subheader(\"Cluster Plot\")\n",
    "fig2, ax2 = plt.subplots()\n",
    "sns.scatterplot(x=X[:, 0], y=X[:, 1], hue=labels, palette='tab10', ax=ax2)\n",
    "ax2.set_xlabel('Project Approved Cost')\n",
    "ax2.set_ylabel('Funds Released')\n",
    "st.pyplot(fig2)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
